apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
  namespace: homework
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      nodeSelector:
        homework: "true"
      volumes:
        - name: workdir
          emptyDir: {}
          # persistentVolumeClaim:
          #   claimName: nginx-pvc
        - name: config-volume
          configMap:
            name: myapp-config
      initContainers:
        - name: init-webpage
          image: busybox
          command:
            ["sh", "-c", 'echo "Welcome to our website!" > /init/index.html']
          volumeMounts:
            - name: workdir
              mountPath: /init
      containers:
        - name: nginx
          image: nginx:latest
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
            requests:
              memory: "64Mi"
              cpu: "250m"
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: workdir
              mountPath: /homework
            - name: config-volume
              mountPath: /homework/conf
              readOnly: true
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "rm -f /homework/index.html"]
          readinessProbe:
            httpGet:
              path: /index.html
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
          command: ["/bin/sh", "-c"]
          args:
            - echo 'server { listen 8000; location / { root /homework; index index.html;} }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'